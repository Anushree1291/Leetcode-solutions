Leetcode -  2008. Maximum Earnings From Taxi
https://leetcode.com/problems/maximum-earnings-from-taxi/

class Solution {
    long [] dp;
    
    public long maxTaxiEarnings(int n, int[][] r) {
        if(r.length==1){
            return r[0][2]+r[0][1]-r[0][0];
        }
        Arrays.sort(r,(a,b)->(a[0]-b[0]));
        dp=new long[r.length+1];
        Arrays.fill(dp,-1);
        long b=backt(r,0);
        return b;
    }
    public long backt(int[][] r, int i){
        if(i>=r.length || i==-1){
            return 0;
        }
        if(dp[i]!=-1){
            return dp[i];
        }
        long n=backt(r,i+1);
        int in=binary(r,i+1,r.length-1,r[i][1]);
        long y=(r[i][1]-r[i][0]+r[i][2] )+ backt(r,in);
        return dp[i]=Math.max(n,y);
    }
    public int binary(int [][] r, int l,int h,int t){
        int a=-1;
        while(l<=h){
            int m=l+(h-l)/2;
            if(r[m][0]>=t){
                a=m;
                h=m-1;
            }
            else{
                l=m+1;
            }
        }
        if(a!=-1) return a;
        return l;
    }
}
